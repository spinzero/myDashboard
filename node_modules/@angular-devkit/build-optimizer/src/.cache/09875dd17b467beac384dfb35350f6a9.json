{"remainingRequest":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/list/audit-trail.js","dependencies":[{"path":"/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/list/audit-trail.js","mtime":499162500000},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/cache-loader/dist/cjs.js","mtime":1535911065030},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { stateChanges } from './state-changes';\nimport { fromRef } from '../observable/fromRef';\nimport { skipWhile, withLatestFrom, map, scan } from 'rxjs/operators';\nexport function auditTrail(query, events) {\n    var auditTrail$ = stateChanges(query, events)\n        .pipe(scan(function (current, action) { return current.concat([action]); }, []));\n    return waitForLoaded(query, auditTrail$);\n}\nfunction loadedData(query) {\n    return fromRef(query, 'value')\n        .pipe(map(function (data) {\n        var lastKeyToLoad;\n        data.payload.forEach(function (child) {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        return { data: data, lastKeyToLoad: lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, action$) {\n    var loaded$ = loadedData(query);\n    return loaded$\n        .pipe(withLatestFrom(action$), map(function (_a) {\n        var loaded = _a[0], actions = _a[1];\n        var lastKeyToLoad = loaded.lastKeyToLoad;\n        var loadedKeys = actions.map(function (snap) { return snap.key; });\n        return { actions: actions, lastKeyToLoad: lastKeyToLoad, loadedKeys: loadedKeys };\n    }), skipWhile(function (meta) { return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1; }), map(function (meta) { return meta.actions; }));\n}\n\n\n\n",{"version":3,"file":"/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/list/audit-trail.js.post-build-optimizer.js","sourceRoot":"","sources":["/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/list/audit-trail.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,EAAE,SAAS,EAAE,cAAc,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AACtE,MAAM,qBAAqB,KAAK,EAAE,MAAM;IACpC,IAAI,WAAW,GAAG,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC;SACxC,IAAI,CAAC,IAAI,CAAC,UAAU,OAAO,EAAE,MAAM,IAAI,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACrF,OAAO,aAAa,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAC7C,CAAC;AACD,oBAAoB,KAAK;IACrB,OAAO,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC;SACzB,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI;QACxB,IAAI,aAAa,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,KAAK;YAChC,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC;YAC1B,OAAO,KAAK,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC;IACxD,CAAC,CAAC,CAAC,CAAC;AACR,CAAC;AACD,uBAAuB,KAAK,EAAE,OAAO;IACjC,IAAI,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAChC,OAAO,OAAO;SACT,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,UAAU,EAAE;QAC/C,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QACzC,IAAI,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC;IACtF,CAAC,CAAC,EAAE,SAAS,CAAC,UAAU,IAAI,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,UAAU,IAAI,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClJ,CAAC;AACD,uCAAuC","sourcesContent":["import { stateChanges } from './state-changes';\nimport { fromRef } from '../observable/fromRef';\nimport { skipWhile, withLatestFrom, map, scan } from 'rxjs/operators';\nexport function auditTrail(query, events) {\n    var auditTrail$ = stateChanges(query, events)\n        .pipe(scan(function (current, action) { return current.concat([action]); }, []));\n    return waitForLoaded(query, auditTrail$);\n}\nfunction loadedData(query) {\n    return fromRef(query, 'value')\n        .pipe(map(function (data) {\n        var lastKeyToLoad;\n        data.payload.forEach(function (child) {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        return { data: data, lastKeyToLoad: lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, action$) {\n    var loaded$ = loadedData(query);\n    return loaded$\n        .pipe(withLatestFrom(action$), map(function (_a) {\n        var loaded = _a[0], actions = _a[1];\n        var lastKeyToLoad = loaded.lastKeyToLoad;\n        var loadedKeys = actions.map(function (snap) { return snap.key; });\n        return { actions: actions, lastKeyToLoad: lastKeyToLoad, loadedKeys: loadedKeys };\n    }), skipWhile(function (meta) { return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1; }), map(function (meta) { return meta.actions; }));\n}\n//# sourceMappingURL=audit-trail.js.map"]}]}