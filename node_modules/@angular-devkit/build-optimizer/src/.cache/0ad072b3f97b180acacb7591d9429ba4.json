{"remainingRequest":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/grg/ANGULAR/myDashboard/node_modules/angular-in-memory-web-api/http-client-backend.service.js","dependencies":[{"path":"/home/grg/ANGULAR/myDashboard/node_modules/angular-in-memory-web-api/http-client-backend.service.js","mtime":1532392197000},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/cache-loader/dist/cjs.js","mtime":1535911065030},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpHeaders, HttpParams, HttpResponse, HttpXhrBackend, XhrFactory } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { STATUS } from './http-status-codes';\nimport { InMemoryBackendConfig, InMemoryBackendConfigArgs, InMemoryDbService } from './interfaces';\nimport { BackendService } from './backend.service';\n/**\n * For Angular `HttpClient` simulate the behavior of a RESTy web api\n * backed by the simple in-memory data store provided by the injected `InMemoryDbService`.\n * Conforms mostly to behavior described here:\n * http://www.restapitutorial.com/lessons/httpmethods.html\n *\n * ### Usage\n *\n * Create an in-memory data store class that implements `InMemoryDbService`.\n * Call `config` static method with this service class and optional configuration object:\n * ```\n * // other imports\n * import { HttpClientModule } from '@angular/common/http';\n * import { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n *\n * import { InMemHeroService, inMemConfig } from '../api/in-memory-hero.service';\n * @NgModule({\n *  imports: [\n *    HttpModule,\n *    HttpClientInMemoryWebApiModule.forRoot(InMemHeroService, inMemConfig),\n *    ...\n *  ],\n *  ...\n * })\n * export class AppModule { ... }\n * ```\n */\nvar HttpClientBackendService = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(HttpClientBackendService, _super);\n    function HttpClientBackendService(inMemDbService, config, xhrFactory) {\n        var _this = _super.call(this, inMemDbService, config) || this;\n        _this.xhrFactory = xhrFactory;\n        return _this;\n    }\n    HttpClientBackendService.prototype.handle = function (req) {\n        try {\n            return this.handleRequest(req);\n        }\n        catch (error) {\n            var err = error.message || error;\n            var resOptions_1 = this.createErrorResponseOptions(req.url, STATUS.INTERNAL_SERVER_ERROR, \"\" + err);\n            return this.createResponse$(function () { return resOptions_1; });\n        }\n    };\n    ////  protected overrides /////\n    HttpClientBackendService.prototype.getJsonBody = function (req) {\n        return req.body;\n    };\n    HttpClientBackendService.prototype.getRequestMethod = function (req) {\n        return (req.method || 'get').toLowerCase();\n    };\n    HttpClientBackendService.prototype.createHeaders = function (headers) {\n        return new HttpHeaders(headers);\n    };\n    HttpClientBackendService.prototype.createQueryMap = function (search) {\n        var map = new Map();\n        if (search) {\n            var params_1 = new HttpParams({ fromString: search });\n            params_1.keys().forEach(function (p) { return map.set(p, params_1.getAll(p)); });\n        }\n        return map;\n    };\n    HttpClientBackendService.prototype.createResponse$fromResponseOptions$ = function (resOptions$) {\n        return resOptions$.pipe(map(function (opts) { return new HttpResponse(opts); }));\n    };\n    HttpClientBackendService.prototype.createPassThruBackend = function () {\n        try {\n            return new HttpXhrBackend(this.xhrFactory);\n        }\n        catch (ex) {\n            ex.message = 'Cannot create passThru404 backend; ' + (ex.message || '');\n            throw ex;\n        }\n    };\n    return HttpClientBackendService;\n}(BackendService));\nexport { HttpClientBackendService };\n\n\n\n",{"version":3,"file":"/home/grg/ANGULAR/myDashboard/node_modules/angular-in-memory-web-api/http-client-backend.service.js.post-build-optimizer.js","sourceRoot":"","sources":["/home/grg/ANGULAR/myDashboard/node_modules/angular-in-memory-web-api/http-client-backend.service.js.pre-build-optimizer.js"],"names":[],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpHeaders, HttpParams, HttpResponse, HttpXhrBackend, XhrFactory } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { STATUS } from './http-status-codes';\nimport { InMemoryBackendConfig, InMemoryBackendConfigArgs, InMemoryDbService } from './interfaces';\nimport { BackendService } from './backend.service';\n/**\n * For Angular `HttpClient` simulate the behavior of a RESTy web api\n * backed by the simple in-memory data store provided by the injected `InMemoryDbService`.\n * Conforms mostly to behavior described here:\n * http://www.restapitutorial.com/lessons/httpmethods.html\n *\n * ### Usage\n *\n * Create an in-memory data store class that implements `InMemoryDbService`.\n * Call `config` static method with this service class and optional configuration object:\n * ```\n * // other imports\n * import { HttpClientModule } from '@angular/common/http';\n * import { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n *\n * import { InMemHeroService, inMemConfig } from '../api/in-memory-hero.service';\n * @NgModule({\n *  imports: [\n *    HttpModule,\n *    HttpClientInMemoryWebApiModule.forRoot(InMemHeroService, inMemConfig),\n *    ...\n *  ],\n *  ...\n * })\n * export class AppModule { ... }\n * ```\n */\nvar HttpClientBackendService = /** @class */ (function (_super) {\n    __extends(HttpClientBackendService, _super);\n    function HttpClientBackendService(inMemDbService, config, xhrFactory) {\n        var _this = _super.call(this, inMemDbService, config) || this;\n        _this.xhrFactory = xhrFactory;\n        return _this;\n    }\n    HttpClientBackendService.prototype.handle = function (req) {\n        try {\n            return this.handleRequest(req);\n        }\n        catch (error) {\n            var err = error.message || error;\n            var resOptions_1 = this.createErrorResponseOptions(req.url, STATUS.INTERNAL_SERVER_ERROR, \"\" + err);\n            return this.createResponse$(function () { return resOptions_1; });\n        }\n    };\n    ////  protected overrides /////\n    HttpClientBackendService.prototype.getJsonBody = function (req) {\n        return req.body;\n    };\n    HttpClientBackendService.prototype.getRequestMethod = function (req) {\n        return (req.method || 'get').toLowerCase();\n    };\n    HttpClientBackendService.prototype.createHeaders = function (headers) {\n        return new HttpHeaders(headers);\n    };\n    HttpClientBackendService.prototype.createQueryMap = function (search) {\n        var map = new Map();\n        if (search) {\n            var params_1 = new HttpParams({ fromString: search });\n            params_1.keys().forEach(function (p) { return map.set(p, params_1.getAll(p)); });\n        }\n        return map;\n    };\n    HttpClientBackendService.prototype.createResponse$fromResponseOptions$ = function (resOptions$) {\n        return resOptions$.pipe(map(function (opts) { return new HttpResponse(opts); }));\n    };\n    HttpClientBackendService.prototype.createPassThruBackend = function () {\n        try {\n            return new HttpXhrBackend(this.xhrFactory);\n        }\n        catch (ex) {\n            ex.message = 'Cannot create passThru404 backend; ' + (ex.message || '');\n            throw ex;\n        }\n    };\n    HttpClientBackendService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    HttpClientBackendService.ctorParameters = function () { return [\n        { type: InMemoryDbService, },\n        { type: InMemoryBackendConfigArgs, decorators: [{ type: Inject, args: [InMemoryBackendConfig,] }, { type: Optional },] },\n        { type: XhrFactory, },\n    ]; };\n    return HttpClientBackendService;\n}(BackendService));\nexport { HttpClientBackendService };\n//# sourceMappingURL=http-client-backend.service.js.map"]}]}