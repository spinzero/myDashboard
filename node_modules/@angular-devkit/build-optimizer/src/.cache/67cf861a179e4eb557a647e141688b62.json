{"remainingRequest":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/grg/ANGULAR/myDashboard/node_modules/@firebase/app/dist/index.cjs.js","dependencies":[{"path":"/home/grg/ANGULAR/myDashboard/node_modules/@firebase/app/dist/index.cjs.js","mtime":1527202522000},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/cache-loader/dist/cjs.js","mtime":1535911065030},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar util = require('@firebase/util');\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar contains = function (obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n// An array to capture listeners before the true auth functions\n// exist\nvar tokenListeners = [];\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nvar FirebaseAppImpl = /** @class */ /*@__PURE__*/ (function () {\n    function FirebaseAppImpl(options, config, firebase_) {\n        this.firebase_ = firebase_;\n        this.isDeleted_ = false;\n        this.services_ = {};\n        this.name_ = config.name;\n        this._automaticDataCollectionEnabled =\n            config.automaticDataCollectionEnabled || false;\n        this.options_ = util.deepCopy(options);\n        this.INTERNAL = {\n            getUid: function () { return null; },\n            getToken: function () { return Promise.resolve(null); },\n            addAuthTokenListener: function (callback) {\n                tokenListeners.push(callback);\n                // Make sure callback is called, asynchronously, in the absence of the auth module\n                setTimeout(function () { return callback(null); }, 0);\n            },\n            removeAuthTokenListener: function (callback) {\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\n            }\n        };\n    }\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\n        get: function () {\n            this.checkDestroyed_();\n            return this._automaticDataCollectionEnabled;\n        },\n        set: function (val) {\n            this.checkDestroyed_();\n            this._automaticDataCollectionEnabled = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\n        get: function () {\n            this.checkDestroyed_();\n            return this.name_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\n        get: function () {\n            this.checkDestroyed_();\n            return this.options_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FirebaseAppImpl.prototype.delete = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.checkDestroyed_();\n            resolve();\n        })\n            .then(function () {\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\n            var services = [];\n            Object.keys(_this.services_).forEach(function (serviceKey) {\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\n                    services.push(_this.services_[serviceKey][instanceKey]);\n                });\n            });\n            return Promise.all(services.map(function (service) {\n                return service.INTERNAL.delete();\n            }));\n        })\n            .then(function () {\n            _this.isDeleted_ = true;\n            _this.services_ = {};\n        });\n    };\n    /**\n     * Return a service instance associated with this app (creating it\n     * on demand), identified by the passed instanceIdentifier.\n     *\n     * NOTE: Currently storage is the only one that is leveraging this\n     * functionality. They invoke it by calling:\n     *\n     * ```javascript\n     * firebase.app().storage('STORAGE BUCKET ID')\n     * ```\n     *\n     * The service name is passed to this already\n     * @internal\n     */\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\n        if (instanceIdentifier === void 0) {\n            instanceIdentifier = DEFAULT_ENTRY_NAME;\n        }\n        this.checkDestroyed_();\n        if (!this.services_[name]) {\n            this.services_[name] = {};\n        }\n        if (!this.services_[name][instanceIdentifier]) {\n            /**\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\n             * then we will pass that instance on, otherwise we pass `null`\n             */\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\n                ? instanceIdentifier\n                : undefined;\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\n            this.services_[name][instanceIdentifier] = service;\n        }\n        return this.services_[name][instanceIdentifier];\n    };\n    /**\n     * Callback function used to extend an App instance at the time\n     * of service instance creation.\n     */\n    FirebaseAppImpl.prototype.extendApp = function (props) {\n        var _this = this;\n        // Copy the object onto the FirebaseAppImpl prototype\n        util.deepExtend(this, props);\n        /**\n         * If the app has overwritten the addAuthTokenListener stub, forward\n         * the active token listeners on to the true fxn.\n         *\n         * TODO: This function is required due to our current module\n         * structure. Once we are able to rely strictly upon a single module\n         * implementation, this code should be refactored and Auth should\n         * provide these stubs and the upgrade logic\n         */\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\n            tokenListeners.forEach(function (listener) {\n                _this.INTERNAL.addAuthTokenListener(listener);\n            });\n            tokenListeners = [];\n        }\n    };\n    /**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\n        if (this.isDeleted_) {\n            error('app-deleted', { name: this.name_ });\n        }\n    };\n    return FirebaseAppImpl;\n}());\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n    FirebaseAppImpl.prototype.delete ||\n    console.log('dc');\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nfunction createFirebaseNamespace() {\n    var apps_ = {};\n    var factories = {};\n    var appHooks = {};\n    // A namespace is a plain JavaScript Object.\n    var namespace = {\n        // Hack to prevent Babel from modifying the object returned\n        // as the firebase namespace.\n        __esModule: true,\n        initializeApp: initializeApp,\n        app: app,\n        apps: null,\n        Promise: Promise,\n        SDK_VERSION: '5.0.4',\n        INTERNAL: {\n            registerService: registerService,\n            createFirebaseNamespace: createFirebaseNamespace,\n            extendNamespace: extendNamespace,\n            createSubscribe: util.createSubscribe,\n            ErrorFactory: util.ErrorFactory,\n            removeApp: removeApp,\n            factories: factories,\n            useAsService: useAsService,\n            Promise: Promise,\n            deepExtend: util.deepExtend\n        }\n    };\n    // Inject a circular default export to allow Babel users who were previously\n    // using:\n    //\n    //   import firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase').default;\n    //\n    // instead of\n    //\n    //   import * as firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase');\n    util.patchProperty(namespace, 'default', namespace);\n    // firebase.apps is a read-only getter.\n    Object.defineProperty(namespace, 'apps', {\n        get: getApps\n    });\n    /**\n     * Called by App.delete() - but before any services associated with the App\n     * are deleted.\n     */\n    function removeApp(name) {\n        var app = apps_[name];\n        callAppHooks(app, 'delete');\n        delete apps_[name];\n    }\n    /**\n     * Get the App object for a given name (or DEFAULT).\n     */\n    function app(name) {\n        name = name || DEFAULT_ENTRY_NAME;\n        if (!contains(apps_, name)) {\n            error('no-app', { name: name });\n        }\n        return apps_[name];\n    }\n    util.patchProperty(app, 'App', FirebaseAppImpl);\n    function initializeApp(options, rawConfig) {\n        if (rawConfig === void 0) {\n            rawConfig = {};\n        }\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\n            var name_1 = rawConfig;\n            rawConfig = { name: name_1 };\n        }\n        var config = rawConfig;\n        if (config.name === undefined) {\n            config.name = DEFAULT_ENTRY_NAME;\n        }\n        var name = config.name;\n        if (typeof name !== 'string' || !name) {\n            error('bad-app-name', { name: name + '' });\n        }\n        if (contains(apps_, name)) {\n            error('duplicate-app', { name: name });\n        }\n        var app = new FirebaseAppImpl(options, config, namespace);\n        apps_[name] = app;\n        callAppHooks(app, 'create');\n        return app;\n    }\n    /*\n     * Return an array of all the non-deleted FirebaseApps.\n     */\n    function getApps() {\n        // Make a copy so caller cannot mutate the apps list.\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\n    }\n    /*\n     * Register a Firebase Service.\n     *\n     * firebase.INTERNAL.registerService()\n     *\n     * TODO: Implement serviceProperties.\n     */\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\n        // Cannot re-register a service that already exists\n        if (factories[name]) {\n            error('duplicate-service', { name: name });\n        }\n        // Capture the service factory for later service instantiation\n        factories[name] = createService;\n        // Capture the appHook, if passed\n        if (appHook) {\n            appHooks[name] = appHook;\n            // Run the **new** app hook on all existing apps\n            getApps().forEach(function (app) {\n                appHook('create', app);\n            });\n        }\n        // The Service namespace is an accessor function ...\n        var serviceNamespace = function (appArg) {\n            if (appArg === void 0) {\n                appArg = app();\n            }\n            if (typeof appArg[name] !== 'function') {\n                // Invalid argument.\n                // This happens in the following case: firebase.storage('gs:/')\n                error('invalid-app-argument', { name: name });\n            }\n            // Forward service instance lookup to the FirebaseApp.\n            return appArg[name]();\n        };\n        // ... and a container for service-level properties.\n        if (serviceProperties !== undefined) {\n            util.deepExtend(serviceNamespace, serviceProperties);\n        }\n        // Monkey-patch the serviceNamespace onto the firebase namespace\n        namespace[name] = serviceNamespace;\n        // Patch the FirebaseAppImpl prototype\n        FirebaseAppImpl.prototype[name] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var serviceFxn = this._getService.bind(this, name);\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n        };\n        return serviceNamespace;\n    }\n    /**\n     * Patch the top-level firebase namespace with additional properties.\n     *\n     * firebase.INTERNAL.extendNamespace()\n     */\n    function extendNamespace(props) {\n        util.deepExtend(namespace, props);\n    }\n    function callAppHooks(app, eventName) {\n        Object.keys(factories).forEach(function (serviceName) {\n            // Ignore virtual services\n            var factoryName = useAsService(app, serviceName);\n            if (factoryName === null) {\n                return;\n            }\n            if (appHooks[factoryName]) {\n                appHooks[factoryName](eventName, app);\n            }\n        });\n    }\n    // Map the requested service to a registered service name\n    // (used to map auth to serverAuth service when needed).\n    function useAsService(app, name) {\n        if (name === 'serverAuth') {\n            return null;\n        }\n        var useService = name;\n        var options = app.options;\n        return useService;\n    }\n    return namespace;\n}\nfunction error(code, args) {\n    throw appErrors.create(code, args);\n}\n// TypeScript does not support non-string indexes!\n// let errors: {[code: AppError: string} = {\nvar errors = {\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\n        'call Firebase App.initializeApp()',\n    'bad-app-name': \"Illegal App name: '{$name}\",\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\n        'account is only allowed in a Node.js environment. On client ' +\n        'devices, you should instead initialize the SDK with an api key and ' +\n        'auth domain',\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\n        'Firebase App instance.'\n};\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar firebase = createFirebaseNamespace();\nexports.firebase = firebase;\nexports.default = firebase;\n\n",{"version":3,"file":"/home/grg/ANGULAR/myDashboard/node_modules/@firebase/app/dist/index.cjs.js.post-build-optimizer.js","sourceRoot":"","sources":["/home/grg/ANGULAR/myDashboard/node_modules/@firebase/app/dist/index.cjs.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAE9D,IAAI,IAAI,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAErC;;;;;;;;;;;;;;GAcG;AACH,IAAI,QAAQ,GAAG,UAAU,GAAG,EAAE,GAAG;IAC7B,OAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1D,CAAC,CAAC;AACF,IAAI,kBAAkB,GAAG,WAAW,CAAC;AACrC,+DAA+D;AAC/D,QAAQ;AACR,IAAI,cAAc,GAAG,EAAE,CAAC;AACxB;;;GAGG;AACH,IAAI,eAAe,GAAG,aAAa,eAAC,CAAC;IACjC,yBAAyB,OAAO,EAAE,MAAM,EAAE,SAAS;QAC/C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,+BAA+B;YAChC,MAAM,CAAC,8BAA8B,IAAI,KAAK,CAAC;QACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG;YACZ,MAAM,EAAE,cAAc,OAAO,IAAI,CAAC,CAAC,CAAC;YACpC,QAAQ,EAAE,cAAc,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvD,oBAAoB,EAAE,UAAU,QAAQ;gBACpC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC9B,kFAAkF;gBAClF,UAAU,CAAC,cAAc,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1D,CAAC;YACD,uBAAuB,EAAE,UAAU,QAAQ;gBACvC,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,UAAU,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAClG,CAAC;SACJ,CAAC;IACN,CAAC;IACD,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,SAAS,EAAE,gCAAgC,EAAE;QAC/E,GAAG,EAAE;YACD,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,OAAO,IAAI,CAAC,+BAA+B,CAAC;QAChD,CAAC;QACD,GAAG,EAAE,UAAU,GAAG;YACd,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,+BAA+B,GAAG,GAAG,CAAC;QAC/C,CAAC;QACD,UAAU,EAAE,IAAI;QAChB,YAAY,EAAE,IAAI;KACrB,CAAC,CAAC;IACH,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,SAAS,EAAE,MAAM,EAAE;QACrD,GAAG,EAAE;YACD,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;QACD,UAAU,EAAE,IAAI;QAChB,YAAY,EAAE,IAAI;KACrB,CAAC,CAAC;IACH,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,SAAS,EAAE,SAAS,EAAE;QACxD,GAAG,EAAE;YACD,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;QACD,UAAU,EAAE,IAAI;QAChB,YAAY,EAAE,IAAI;KACrB,CAAC,CAAC;IACH,eAAe,CAAC,SAAS,CAAC,MAAM,GAAG;QAC/B,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO;YAChC,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,OAAO,EAAE,CAAC;QACd,CAAC,CAAC;aACG,IAAI,CAAC;YACN,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,UAAU,UAAU;gBACrD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,WAAW;oBAClE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC5D,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YACH,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,OAAO;gBAC7C,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YACrC,CAAC,CAAC,CAAC,CAAC;QACR,CAAC,CAAC;aACG,IAAI,CAAC;YACN,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;YACxB,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IACF;;;;;;;;;;;;;OAaG;IACH,eAAe,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,IAAI,EAAE,kBAAkB;QACtE,IAAI,kBAAkB,KAAK,KAAK,CAAC,EAAE;YAAE,kBAAkB,GAAG,kBAAkB,CAAC;SAAE;QAC/E,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;SAC7B;QACD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,EAAE;YAC3C;;;eAGG;YACH,IAAI,iBAAiB,GAAG,kBAAkB,KAAK,kBAAkB;gBAC7D,CAAC,CAAC,kBAAkB;gBACpB,CAAC,CAAC,SAAS,CAAC;YAChB,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,iBAAiB,CAAC,CAAC;YAC1G,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,GAAG,OAAO,CAAC;SACtD;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,CAAC;IACpD,CAAC,CAAC;IACF;;;OAGG;IACH,eAAe,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,KAAK;QACjD,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,qDAAqD;QACrD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC7B;;;;;;;;WAQG;QACH,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,oBAAoB,EAAE;YACvD,cAAc,CAAC,OAAO,CAAC,UAAU,QAAQ;gBACrC,KAAK,CAAC,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;YACH,cAAc,GAAG,EAAE,CAAC;SACvB;IACL,CAAC,CAAC;IACF;;;OAGG;IACH,eAAe,CAAC,SAAS,CAAC,eAAe,GAAG;QACxC,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,KAAK,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;SAC9C;IACL,CAAC,CAAC;IACF,OAAO,eAAe,CAAC;AAC3B,CAAC,EAAE,CAAC,CAAC;AACL,sEAAsE;AACtE,WAAW;AACX,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,IAAI,eAAe,CAAC,SAAS,CAAC,OAAO,CAAC;IACjE,eAAe,CAAC,SAAS,CAAC,MAAM;IAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACtB;;;;;;GAMG;AACH;IACI,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,IAAI,QAAQ,GAAG,EAAE,CAAC;IAClB,4CAA4C;IAC5C,IAAI,SAAS,GAAG;QACZ,2DAA2D;QAC3D,6BAA6B;QAC7B,UAAU,EAAE,IAAI;QAChB,aAAa,EAAE,aAAa;QAC5B,GAAG,EAAE,GAAG;QACR,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,OAAO;QAChB,WAAW,EAAE,OAAO;QACpB,QAAQ,EAAE;YACN,eAAe,EAAE,eAAe;YAChC,uBAAuB,EAAE,uBAAuB;YAChD,eAAe,EAAE,eAAe;YAChC,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,SAAS,EAAE,SAAS;YACpB,SAAS,EAAE,SAAS;YACpB,YAAY,EAAE,YAAY;YAC1B,OAAO,EAAE,OAAO;YAChB,UAAU,EAAE,IAAI,CAAC,UAAU;SAC9B;KACJ,CAAC;IACF,4EAA4E;IAC5E,SAAS;IACT,EAAE;IACF,qCAAqC;IACrC,+DAA+D;IAC/D,EAAE;IACF,aAAa;IACb,EAAE;IACF,0CAA0C;IAC1C,uDAAuD;IACvD,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IACpD,uCAAuC;IACvC,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,MAAM,EAAE;QACrC,GAAG,EAAE,OAAO;KACf,CAAC,CAAC;IACH;;;OAGG;IACH,mBAAmB,IAAI;QACnB,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;QACtB,YAAY,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QAC5B,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IACD;;OAEG;IACH,aAAa,IAAI;QACb,IAAI,GAAG,IAAI,IAAI,kBAAkB,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE;YACxB,KAAK,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;SACnC;QACD,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IACD,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,eAAe,CAAC,CAAC;IAChD,uBAAuB,OAAO,EAAE,SAAS;QACrC,IAAI,SAAS,KAAK,KAAK,CAAC,EAAE;YAAE,SAAS,GAAG,EAAE,CAAC;SAAE;QAC7C,IAAI,OAAO,SAAS,KAAK,QAAQ,IAAI,SAAS,KAAK,IAAI,EAAE;YACrD,IAAI,MAAM,GAAG,SAAS,CAAC;YACvB,SAAS,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;SAChC;QACD,IAAI,MAAM,GAAG,SAAS,CAAC;QACvB,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE;YAC3B,MAAM,CAAC,IAAI,GAAG,kBAAkB,CAAC;SACpC;QACD,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACvB,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,CAAC,IAAI,EAAE;YACnC,KAAK,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC;SAC9C;QACD,IAAI,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE;YACvB,KAAK,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;SAC1C;QACD,IAAI,GAAG,GAAG,IAAI,eAAe,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;QAC1D,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;QAClB,YAAY,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QAC5B,OAAO,GAAG,CAAC;IACf,CAAC;IACD;;OAEG;IACH;QACI,qDAAqD;QACrD,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC;IACD;;;;;;OAMG;IACH,yBAAyB,IAAI,EAAE,aAAa,EAAE,iBAAiB,EAAE,OAAO,EAAE,sBAAsB;QAC5F,mDAAmD;QACnD,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;YACjB,KAAK,CAAC,mBAAmB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;SAC9C;QACD,8DAA8D;QAC9D,SAAS,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC;QAChC,iCAAiC;QACjC,IAAI,OAAO,EAAE;YACT,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;YACzB,gDAAgD;YAChD,OAAO,EAAE,CAAC,OAAO,CAAC,UAAU,GAAG;gBAC3B,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;SACN;QACD,oDAAoD;QACpD,IAAI,gBAAgB,GAAG,UAAU,MAAM;YACnC,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBAAE,MAAM,GAAG,GAAG,EAAE,CAAC;aAAE;YAC1C,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,UAAU,EAAE;gBACpC,oBAAoB;gBACpB,+DAA+D;gBAC/D,KAAK,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;aACjD;YACD,sDAAsD;YACtD,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;QAC1B,CAAC,CAAC;QACF,oDAAoD;QACpD,IAAI,iBAAiB,KAAK,SAAS,EAAE;YACjC,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;SACxD;QACD,gEAAgE;QAChE,SAAS,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC;QACnC,sCAAsC;QACtC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG;YAC9B,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;gBAC1C,IAAI,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;aAC5B;YACD,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACnD,OAAO,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACtE,CAAC,CAAC;QACF,OAAO,gBAAgB,CAAC;IAC5B,CAAC;IACD;;;;OAIG;IACH,yBAAyB,KAAK;QAC1B,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IACtC,CAAC;IACD,sBAAsB,GAAG,EAAE,SAAS;QAChC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,UAAU,WAAW;YAChD,0BAA0B;YAC1B,IAAI,WAAW,GAAG,YAAY,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;YACjD,IAAI,WAAW,KAAK,IAAI,EAAE;gBACtB,OAAO;aACV;YACD,IAAI,QAAQ,CAAC,WAAW,CAAC,EAAE;gBACvB,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;aACzC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACD,yDAAyD;IACzD,wDAAwD;IACxD,sBAAsB,GAAG,EAAE,IAAI;QAC3B,IAAI,IAAI,KAAK,YAAY,EAAE;YACvB,OAAO,IAAI,CAAC;SACf;QACD,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;QAC1B,OAAO,UAAU,CAAC;IACtB,CAAC;IACD,OAAO,SAAS,CAAC;AACrB,CAAC;AACD,eAAe,IAAI,EAAE,IAAI;IACrB,MAAM,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACvC,CAAC;AACD,kDAAkD;AAClD,4CAA4C;AAC5C,IAAI,MAAM,GAAG;IACT,QAAQ,EAAE,+CAA+C;QACrD,mCAAmC;IACvC,cAAc,EAAE,4BAA4B;IAC5C,eAAe,EAAE,6CAA6C;IAC9D,aAAa,EAAE,8CAA8C;IAC7D,mBAAmB,EAAE,qDAAqD;IAC1E,kBAAkB,EAAE,+CAA+C;QAC/D,8DAA8D;QAC9D,qEAAqE;QACrE,aAAa;IACjB,sBAAsB,EAAE,mDAAmD;QACvE,wBAAwB;CAC/B,CAAC;AACF,IAAI,SAAS,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;AAEjE;;;;;;;;;;;;;;GAcG;AACH,IAAI,QAAQ,GAAG,uBAAuB,EAAE,CAAC;AAEzC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5B,OAAO,CAAC,OAAO,GAAG,QAAQ,CAAC","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = require('@firebase/util');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.0.4',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n"]}]}