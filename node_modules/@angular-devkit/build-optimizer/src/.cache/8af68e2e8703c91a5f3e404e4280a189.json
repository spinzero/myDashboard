{"remainingRequest":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/list/create-reference.js","dependencies":[{"path":"/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/list/create-reference.js","mtime":499162500000},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/cache-loader/dist/cjs.js","mtime":1535911065030},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { snapshotChanges } from './snapshot-changes';\nimport { stateChanges } from './state-changes';\nimport { auditTrail } from './audit-trail';\nimport { createDataOperationMethod } from './data-operation';\nimport { createRemoveMethod } from './remove';\nimport { map } from 'rxjs/operators';\nexport function createListReference(query, afDatabase) {\n    return {\n        query: query,\n        update: createDataOperationMethod(query.ref, 'update'),\n        set: createDataOperationMethod(query.ref, 'set'),\n        push: function (data) { return query.ref.push(data); },\n        remove: createRemoveMethod(query.ref),\n        snapshotChanges: function (events) {\n            var snapshotChanges$ = snapshotChanges(query, events);\n            return afDatabase.scheduler.keepUnstableUntilFirst(afDatabase.scheduler.runOutsideAngular(snapshotChanges$));\n        },\n        stateChanges: function (events) {\n            var stateChanges$ = stateChanges(query, events);\n            return afDatabase.scheduler.keepUnstableUntilFirst(afDatabase.scheduler.runOutsideAngular(stateChanges$));\n        },\n        auditTrail: function (events) {\n            var auditTrail$ = auditTrail(query, events);\n            return afDatabase.scheduler.keepUnstableUntilFirst(afDatabase.scheduler.runOutsideAngular(auditTrail$));\n        },\n        valueChanges: function (events) {\n            var snapshotChanges$ = snapshotChanges(query, events);\n            return afDatabase.scheduler.keepUnstableUntilFirst(afDatabase.scheduler.runOutsideAngular(snapshotChanges$)).pipe(map(function (actions) { return actions.map(function (a) { return a.payload.val(); }); }));\n        }\n    };\n}\n\n\n\n",{"version":3,"file":"/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/list/create-reference.js.post-build-optimizer.js","sourceRoot":"","sources":["/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/list/create-reference.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AACrD,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,yBAAyB,EAAE,MAAM,kBAAkB,CAAC;AAC7D,OAAO,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAC9C,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,MAAM,8BAA8B,KAAK,EAAE,UAAU;IACjD,OAAO;QACH,KAAK,EAAE,KAAK;QACZ,MAAM,EAAE,yBAAyB,CAAC,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC;QACtD,GAAG,EAAE,yBAAyB,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC;QAChD,IAAI,EAAE,UAAU,IAAI,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACtD,MAAM,EAAE,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC;QACrC,eAAe,EAAE,UAAU,MAAM;YAC7B,IAAI,gBAAgB,GAAG,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YACtD,OAAO,UAAU,CAAC,SAAS,CAAC,sBAAsB,CAAC,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACjH,CAAC;QACD,YAAY,EAAE,UAAU,MAAM;YAC1B,IAAI,aAAa,GAAG,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAChD,OAAO,UAAU,CAAC,SAAS,CAAC,sBAAsB,CAAC,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC,CAAC;QAC9G,CAAC;QACD,UAAU,EAAE,UAAU,MAAM;YACxB,IAAI,WAAW,GAAG,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC5C,OAAO,UAAU,CAAC,SAAS,CAAC,sBAAsB,CAAC,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC;QAC5G,CAAC;QACD,YAAY,EAAE,UAAU,MAAM;YAC1B,IAAI,gBAAgB,GAAG,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YACtD,OAAO,UAAU,CAAC,SAAS,CAAC,sBAAsB,CAAC,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,OAAO,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjN,CAAC;KACJ,CAAC;AACN,CAAC;AACD,4CAA4C","sourcesContent":["import { snapshotChanges } from './snapshot-changes';\nimport { stateChanges } from './state-changes';\nimport { auditTrail } from './audit-trail';\nimport { createDataOperationMethod } from './data-operation';\nimport { createRemoveMethod } from './remove';\nimport { map } from 'rxjs/operators';\nexport function createListReference(query, afDatabase) {\n    return {\n        query: query,\n        update: createDataOperationMethod(query.ref, 'update'),\n        set: createDataOperationMethod(query.ref, 'set'),\n        push: function (data) { return query.ref.push(data); },\n        remove: createRemoveMethod(query.ref),\n        snapshotChanges: function (events) {\n            var snapshotChanges$ = snapshotChanges(query, events);\n            return afDatabase.scheduler.keepUnstableUntilFirst(afDatabase.scheduler.runOutsideAngular(snapshotChanges$));\n        },\n        stateChanges: function (events) {\n            var stateChanges$ = stateChanges(query, events);\n            return afDatabase.scheduler.keepUnstableUntilFirst(afDatabase.scheduler.runOutsideAngular(stateChanges$));\n        },\n        auditTrail: function (events) {\n            var auditTrail$ = auditTrail(query, events);\n            return afDatabase.scheduler.keepUnstableUntilFirst(afDatabase.scheduler.runOutsideAngular(auditTrail$));\n        },\n        valueChanges: function (events) {\n            var snapshotChanges$ = snapshotChanges(query, events);\n            return afDatabase.scheduler.keepUnstableUntilFirst(afDatabase.scheduler.runOutsideAngular(snapshotChanges$)).pipe(map(function (actions) { return actions.map(function (a) { return a.payload.val(); }); }));\n        }\n    };\n}\n//# sourceMappingURL=create-reference.js.map"]}]}