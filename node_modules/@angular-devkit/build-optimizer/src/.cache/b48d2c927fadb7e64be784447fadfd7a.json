{"remainingRequest":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/utils.js","dependencies":[{"path":"/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/utils.js","mtime":499162500000},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/cache-loader/dist/cjs.js","mtime":1535911065030},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["export function isString(value) {\n    return typeof value === 'string';\n}\nexport function isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\nexport function isNil(obj) {\n    return obj === undefined || obj === null;\n}\nexport function isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\nexport function getRef(database, pathRef) {\n    return isFirebaseRef(pathRef) ? pathRef\n        : database.ref(pathRef);\n}\nexport function checkOperationCases(item, cases) {\n    if (isString(item)) {\n        return cases.stringCase();\n    }\n    else if (isFirebaseRef(item)) {\n        return cases.firebaseCase();\n    }\n    else if (isFirebaseDataSnapshot(item)) {\n        return cases.snapshotCase();\n    }\n    throw new Error(\"Expects a string, snapshot, or reference. Got: \" + typeof item);\n}\n\n\n\n",{"version":3,"file":"/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/utils.js.post-build-optimizer.js","sourceRoot":"","sources":["/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/utils.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,MAAM,mBAAmB,KAAK;IAC1B,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;AACrC,CAAC;AACD,MAAM,iCAAiC,KAAK;IACxC,OAAO,OAAO,KAAK,CAAC,SAAS,KAAK,UAAU,CAAC;AACjD,CAAC;AACD,MAAM,gBAAgB,GAAG;IACrB,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;AAC7C,CAAC;AACD,MAAM,wBAAwB,KAAK;IAC/B,OAAO,OAAO,KAAK,CAAC,GAAG,KAAK,UAAU,CAAC;AAC3C,CAAC;AACD,MAAM,iBAAiB,QAAQ,EAAE,OAAO;IACpC,OAAO,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;QACnC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAChC,CAAC;AACD,MAAM,8BAA8B,IAAI,EAAE,KAAK;IAC3C,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;QAChB,OAAO,KAAK,CAAC,UAAU,EAAE,CAAC;KAC7B;SACI,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;QAC1B,OAAO,KAAK,CAAC,YAAY,EAAE,CAAC;KAC/B;SACI,IAAI,sBAAsB,CAAC,IAAI,CAAC,EAAE;QACnC,OAAO,KAAK,CAAC,YAAY,EAAE,CAAC;KAC/B;IACD,MAAM,IAAI,KAAK,CAAC,iDAAiD,GAAG,OAAO,IAAI,CAAC,CAAC;AACrF,CAAC;AACD,iCAAiC","sourcesContent":["export function isString(value) {\n    return typeof value === 'string';\n}\nexport function isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\nexport function isNil(obj) {\n    return obj === undefined || obj === null;\n}\nexport function isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\nexport function getRef(database, pathRef) {\n    return isFirebaseRef(pathRef) ? pathRef\n        : database.ref(pathRef);\n}\nexport function checkOperationCases(item, cases) {\n    if (isString(item)) {\n        return cases.stringCase();\n    }\n    else if (isFirebaseRef(item)) {\n        return cases.firebaseCase();\n    }\n    else if (isFirebaseDataSnapshot(item)) {\n        return cases.snapshotCase();\n    }\n    throw new Error(\"Expects a string, snapshot, or reference. Got: \" + typeof item);\n}\n//# sourceMappingURL=utils.js.map"]}]}