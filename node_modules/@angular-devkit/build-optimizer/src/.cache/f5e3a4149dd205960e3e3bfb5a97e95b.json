{"remainingRequest":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/grg/ANGULAR/myDashboard/node_modules/core-js/modules/_to-primitive.js","dependencies":[{"path":"/home/grg/ANGULAR/myDashboard/node_modules/core-js/modules/_to-primitive.js","mtime":499162500000},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/cache-loader/dist/cjs.js","mtime":1535911065030},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n    if (!isObject(it))\n        return it;\n    var fn, val;\n    if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))\n        return val;\n    if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))\n        return val;\n    if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))\n        return val;\n    throw TypeError(\"Can't convert object to primitive value\");\n};\n\n",{"version":3,"file":"/home/grg/ANGULAR/myDashboard/node_modules/core-js/modules/_to-primitive.js.post-build-optimizer.js","sourceRoot":"","sources":["/home/grg/ANGULAR/myDashboard/node_modules/core-js/modules/_to-primitive.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,6CAA6C;AAC7C,IAAI,QAAQ,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACvC,0EAA0E;AAC1E,8DAA8D;AAC9D,MAAM,CAAC,OAAO,GAAG,UAAU,EAAE,EAAE,CAAC;IAC9B,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;QAAE,OAAO,EAAE,CAAC;IAC7B,IAAI,EAAE,EAAE,GAAG,CAAC;IACZ,IAAI,CAAC,IAAI,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,UAAU,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAAE,OAAO,GAAG,CAAC;IAC7F,IAAI,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,UAAU,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAAE,OAAO,GAAG,CAAC;IACvF,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,UAAU,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAAE,OAAO,GAAG,CAAC;IAC9F,MAAM,SAAS,CAAC,yCAAyC,CAAC,CAAC;AAC7D,CAAC,CAAC","sourcesContent":["// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n"]}]}