{"remainingRequest":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/grg/ANGULAR/myDashboard/node_modules/rxjs/_esm5/internal/observable/fromIterable.js","dependencies":[{"path":"/home/grg/ANGULAR/myDashboard/node_modules/rxjs/_esm5/internal/observable/fromIterable.js","mtime":499162500000},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/cache-loader/dist/cjs.js","mtime":1535911065030},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator,_util_subscribeToIterable PURE_IMPORTS_END */\n/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator,_util_subscribeToIterable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\nexport function fromIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    if (!scheduler) {\n        return new Observable(subscribeToIterable(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var iterator;\n            sub.add(function () {\n                if (iterator && typeof iterator.return === 'function') {\n                    iterator.return();\n                }\n            });\n            sub.add(scheduler.schedule(function () {\n                iterator = input[Symbol_iterator]();\n                sub.add(scheduler.schedule(function () {\n                    if (subscriber.closed) {\n                        return;\n                    }\n                    var value;\n                    var done;\n                    try {\n                        var result = iterator.next();\n                        value = result.value;\n                        done = result.done;\n                    }\n                    catch (err) {\n                        subscriber.error(err);\n                        return;\n                    }\n                    if (done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(value);\n                        this.schedule();\n                    }\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n\n\n\n",{"version":3,"file":"/home/grg/ANGULAR/myDashboard/node_modules/rxjs/_esm5/internal/observable/fromIterable.js.post-build-optimizer.js","sourceRoot":"","sources":["/home/grg/ANGULAR/myDashboard/node_modules/rxjs/_esm5/internal/observable/fromIterable.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,+GAA+G;;AAC/G,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,QAAQ,IAAI,eAAe,EAAE,MAAM,oBAAoB,CAAC;AACjE,OAAO,EAAE,mBAAmB,EAAE,MAAM,6BAA6B,CAAC;AAClE,MAAM,uBAAuB,KAAK,EAAE,SAAS;IACzC,IAAI,CAAC,KAAK,EAAE;QACR,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC9C;IACD,IAAI,CAAC,SAAS,EAAE;QACZ,OAAO,IAAI,UAAU,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;KACrD;SACI;QACD,OAAO,IAAI,UAAU,CAAC,UAAU,UAAU;YACtC,IAAI,GAAG,GAAG,IAAI,YAAY,EAAE,CAAC;YAC7B,IAAI,QAAQ,CAAC;YACb,GAAG,CAAC,GAAG,CAAC;gBACJ,IAAI,QAAQ,IAAI,OAAO,QAAQ,CAAC,MAAM,KAAK,UAAU,EAAE;oBACnD,QAAQ,CAAC,MAAM,EAAE,CAAC;iBACrB;YACL,CAAC,CAAC,CAAC;YACH,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;gBACvB,QAAQ,GAAG,KAAK,CAAC,eAAe,CAAC,EAAE,CAAC;gBACpC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;oBACvB,IAAI,UAAU,CAAC,MAAM,EAAE;wBACnB,OAAO;qBACV;oBACD,IAAI,KAAK,CAAC;oBACV,IAAI,IAAI,CAAC;oBACT,IAAI;wBACA,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;wBAC7B,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;wBACrB,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;qBACtB;oBACD,OAAO,GAAG,EAAE;wBACR,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACtB,OAAO;qBACV;oBACD,IAAI,IAAI,EAAE;wBACN,UAAU,CAAC,QAAQ,EAAE,CAAC;qBACzB;yBACI;wBACD,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;qBACnB;gBACL,CAAC,CAAC,CAAC,CAAC;YACR,CAAC,CAAC,CAAC,CAAC;YACJ,OAAO,GAAG,CAAC;QACf,CAAC,CAAC,CAAC;KACN;AACL,CAAC;AACD,wCAAwC","sourcesContent":["/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator,_util_subscribeToIterable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\nexport function fromIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    if (!scheduler) {\n        return new Observable(subscribeToIterable(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var iterator;\n            sub.add(function () {\n                if (iterator && typeof iterator.return === 'function') {\n                    iterator.return();\n                }\n            });\n            sub.add(scheduler.schedule(function () {\n                iterator = input[Symbol_iterator]();\n                sub.add(scheduler.schedule(function () {\n                    if (subscriber.closed) {\n                        return;\n                    }\n                    var value;\n                    var done;\n                    try {\n                        var result = iterator.next();\n                        value = result.value;\n                        done = result.done;\n                    }\n                    catch (err) {\n                        subscriber.error(err);\n                        return;\n                    }\n                    if (done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(value);\n                        this.schedule();\n                    }\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromIterable.js.map\n"]}]}