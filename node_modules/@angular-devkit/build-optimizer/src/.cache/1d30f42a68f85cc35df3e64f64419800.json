{"remainingRequest":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/grg/ANGULAR/myDashboard/node_modules/angular-in-memory-web-api/http-client-in-memory-web-api.module.js","dependencies":[{"path":"/home/grg/ANGULAR/myDashboard/node_modules/angular-in-memory-web-api/http-client-in-memory-web-api.module.js","mtime":1532392197000},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/cache-loader/dist/cjs.js","mtime":1535911065030},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { NgModule } from '@angular/core';\nimport { HttpBackend, XhrFactory } from '@angular/common/http';\nimport { InMemoryBackendConfig, InMemoryDbService } from './interfaces';\nimport { HttpClientBackendService } from './http-client-backend.service';\n// Internal - Creates the in-mem backend for the HttpClient module\n// AoT requires factory to be exported\nexport function httpClientInMemBackendServiceFactory(dbService, options, xhrFactory) {\n    var backend = new HttpClientBackendService(dbService, options, xhrFactory);\n    return backend;\n}\nvar HttpClientInMemoryWebApiModule = /** @class */ /*@__PURE__*/ (function () {\n    function HttpClientInMemoryWebApiModule() {\n    }\n    /**\n    *  Redirect the Angular `HttpClient` XHR calls\n    *  to in-memory data store that implements `InMemoryDbService`.\n    *  with class that implements InMemoryDbService and creates an in-memory database.\n    *\n    *  Usually imported in the root application module.\n    *  Can import in a lazy feature module too, which will shadow modules loaded earlier\n    *\n    * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\n    * @param {InMemoryBackendConfigArgs} [options]\n    *\n    * @example\n    * HttpInMemoryWebApiModule.forRoot(dbCreator);\n    * HttpInMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\n    */\n    /**\n      *  Redirect the Angular `HttpClient` XHR calls\n      *  to in-memory data store that implements `InMemoryDbService`.\n      *  with class that implements InMemoryDbService and creates an in-memory database.\n      *\n      *  Usually imported in the root application module.\n      *  Can import in a lazy feature module too, which will shadow modules loaded earlier\n      *\n      * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\n      * @param {InMemoryBackendConfigArgs} [options]\n      *\n      * @example\n      * HttpInMemoryWebApiModule.forRoot(dbCreator);\n      * HttpInMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\n      */\n    HttpClientInMemoryWebApiModule.forRoot = /**\n      *  Redirect the Angular `HttpClient` XHR calls\n      *  to in-memory data store that implements `InMemoryDbService`.\n      *  with class that implements InMemoryDbService and creates an in-memory database.\n      *\n      *  Usually imported in the root application module.\n      *  Can import in a lazy feature module too, which will shadow modules loaded earlier\n      *\n      * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\n      * @param {InMemoryBackendConfigArgs} [options]\n      *\n      * @example\n      * HttpInMemoryWebApiModule.forRoot(dbCreator);\n      * HttpInMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\n      */\n        function (dbCreator, options) {\n            return {\n                ngModule: HttpClientInMemoryWebApiModule,\n                providers: [\n                    { provide: InMemoryDbService, useClass: dbCreator },\n                    { provide: InMemoryBackendConfig, useValue: options },\n                    { provide: HttpBackend,\n                        useFactory: httpClientInMemBackendServiceFactory,\n                        deps: [InMemoryDbService, InMemoryBackendConfig, XhrFactory] }\n                ]\n            };\n        };\n    /**\n   *\n   * Enable and configure the in-memory web api in a lazy-loaded feature module.\n   * Same as `forRoot`.\n   * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\n   */\n    /**\n       *\n       * Enable and configure the in-memory web api in a lazy-loaded feature module.\n       * Same as `forRoot`.\n       * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\n       */\n    HttpClientInMemoryWebApiModule.forFeature = /**\n       *\n       * Enable and configure the in-memory web api in a lazy-loaded feature module.\n       * Same as `forRoot`.\n       * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\n       */\n        function (dbCreator, options) {\n            return HttpClientInMemoryWebApiModule.forRoot(dbCreator, options);\n        };\n    return HttpClientInMemoryWebApiModule;\n}());\nexport { HttpClientInMemoryWebApiModule };\n\n\n\n",{"version":3,"file":"/home/grg/ANGULAR/myDashboard/node_modules/angular-in-memory-web-api/http-client-in-memory-web-api.module.js.post-build-optimizer.js","sourceRoot":"","sources":["/home/grg/ANGULAR/myDashboard/node_modules/angular-in-memory-web-api/http-client-in-memory-web-api.module.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACzC,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAC/D,OAAO,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAC;AACxE,OAAO,EAAE,wBAAwB,EAAE,MAAM,+BAA+B,CAAC;AACzE,kEAAkE;AAClE,sCAAsC;AACtC,MAAM,+CAA+C,SAAS,EAAE,OAAO,EAAE,UAAU;IAC/E,IAAI,OAAO,GAAG,IAAI,wBAAwB,CAAC,SAAS,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;IAC3E,OAAO,OAAO,CAAC;AACnB,CAAC;AACD,IAAI,8BAA8B,GAAG,aAAa,eAAC,CAAC;IAChD;IACA,CAAC;IACD;;;;;;;;;;;;;;MAcE;IACF;;;;;;;;;;;;;;QAcI;IACJ,8BAA8B,CAAC,OAAO,GAAG;;;;;;;;;;;;;;QAcrC;QACJ,UAAU,SAAS,EAAE,OAAO;YACxB,OAAO;gBACH,QAAQ,EAAE,8BAA8B;gBACxC,SAAS,EAAE;oBACP,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,SAAS,EAAE;oBACnD,EAAE,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,OAAO,EAAE;oBACrD,EAAE,OAAO,EAAE,WAAW;wBAClB,UAAU,EAAE,oCAAoC;wBAChD,IAAI,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,UAAU,CAAC,EAAE;iBACrE;aACJ,CAAC;QACN,CAAC,CAAC;IACF;;;;;KAKC;IACD;;;;;SAKK;IACL,8BAA8B,CAAC,UAAU,GAAG;;;;;SAKvC;QACL,UAAU,SAAS,EAAE,OAAO;YACxB,OAAO,8BAA8B,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACtE,CAAC,CAAC;IAIF,OAAO,8BAA8B,CAAC;GACvC,CAAC,CAAC;AACL,OAAO,EAAE,8BAA8B,EAAE,CAAC;AAC1C,gEAAgE","sourcesContent":["import { NgModule } from '@angular/core';\nimport { HttpBackend, XhrFactory } from '@angular/common/http';\nimport { InMemoryBackendConfig, InMemoryDbService } from './interfaces';\nimport { HttpClientBackendService } from './http-client-backend.service';\n// Internal - Creates the in-mem backend for the HttpClient module\n// AoT requires factory to be exported\nexport function httpClientInMemBackendServiceFactory(dbService, options, xhrFactory) {\n    var backend = new HttpClientBackendService(dbService, options, xhrFactory);\n    return backend;\n}\nvar HttpClientInMemoryWebApiModule = /** @class */ (function () {\n    function HttpClientInMemoryWebApiModule() {\n    }\n    /**\n    *  Redirect the Angular `HttpClient` XHR calls\n    *  to in-memory data store that implements `InMemoryDbService`.\n    *  with class that implements InMemoryDbService and creates an in-memory database.\n    *\n    *  Usually imported in the root application module.\n    *  Can import in a lazy feature module too, which will shadow modules loaded earlier\n    *\n    * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\n    * @param {InMemoryBackendConfigArgs} [options]\n    *\n    * @example\n    * HttpInMemoryWebApiModule.forRoot(dbCreator);\n    * HttpInMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\n    */\n    /**\n      *  Redirect the Angular `HttpClient` XHR calls\n      *  to in-memory data store that implements `InMemoryDbService`.\n      *  with class that implements InMemoryDbService and creates an in-memory database.\n      *\n      *  Usually imported in the root application module.\n      *  Can import in a lazy feature module too, which will shadow modules loaded earlier\n      *\n      * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\n      * @param {InMemoryBackendConfigArgs} [options]\n      *\n      * @example\n      * HttpInMemoryWebApiModule.forRoot(dbCreator);\n      * HttpInMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\n      */\n    HttpClientInMemoryWebApiModule.forRoot = /**\n      *  Redirect the Angular `HttpClient` XHR calls\n      *  to in-memory data store that implements `InMemoryDbService`.\n      *  with class that implements InMemoryDbService and creates an in-memory database.\n      *\n      *  Usually imported in the root application module.\n      *  Can import in a lazy feature module too, which will shadow modules loaded earlier\n      *\n      * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\n      * @param {InMemoryBackendConfigArgs} [options]\n      *\n      * @example\n      * HttpInMemoryWebApiModule.forRoot(dbCreator);\n      * HttpInMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\n      */\n    function (dbCreator, options) {\n        return {\n            ngModule: HttpClientInMemoryWebApiModule,\n            providers: [\n                { provide: InMemoryDbService, useClass: dbCreator },\n                { provide: InMemoryBackendConfig, useValue: options },\n                { provide: HttpBackend,\n                    useFactory: httpClientInMemBackendServiceFactory,\n                    deps: [InMemoryDbService, InMemoryBackendConfig, XhrFactory] }\n            ]\n        };\n    };\n    /**\n   *\n   * Enable and configure the in-memory web api in a lazy-loaded feature module.\n   * Same as `forRoot`.\n   * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\n   */\n    /**\n       *\n       * Enable and configure the in-memory web api in a lazy-loaded feature module.\n       * Same as `forRoot`.\n       * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\n       */\n    HttpClientInMemoryWebApiModule.forFeature = /**\n       *\n       * Enable and configure the in-memory web api in a lazy-loaded feature module.\n       * Same as `forRoot`.\n       * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\n       */\n    function (dbCreator, options) {\n        return HttpClientInMemoryWebApiModule.forRoot(dbCreator, options);\n    };\n    HttpClientInMemoryWebApiModule.decorators = [\n        { type: NgModule, args: [{},] },\n    ];\n    return HttpClientInMemoryWebApiModule;\n}());\nexport { HttpClientInMemoryWebApiModule };\n//# sourceMappingURL=http-client-in-memory-web-api.module.js.map"]}]}