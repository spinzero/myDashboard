{"remainingRequest":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/grg/ANGULAR/myDashboard/node_modules/core-js/modules/_collection-strong.js","dependencies":[{"path":"/home/grg/ANGULAR/myDashboard/node_modules/core-js/modules/_collection-strong.js","mtime":499162500000},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/cache-loader/dist/cjs.js","mtime":1535911065030},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\nvar getEntry = function (that, key) {\n    // fast case\n    var index = fastKey(key);\n    var entry;\n    if (index !== 'F')\n        return that._i[index];\n    // frozen object case\n    for (entry = that._f; entry; entry = entry.n) {\n        if (entry.k == key)\n            return entry;\n    }\n};\nmodule.exports = {\n    getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n        var C = wrapper(function (that, iterable) {\n            anInstance(that, C, NAME, '_i');\n            that._t = NAME; // collection type\n            that._i = create(null); // index\n            that._f = undefined; // first entry\n            that._l = undefined; // last entry\n            that[SIZE] = 0; // size\n            if (iterable != undefined)\n                forOf(iterable, IS_MAP, that[ADDER], that);\n        });\n        redefineAll(C.prototype, {\n            // 23.1.3.1 Map.prototype.clear()\n            // 23.2.3.2 Set.prototype.clear()\n            clear: function clear() {\n                for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n                    entry.r = true;\n                    if (entry.p)\n                        entry.p = entry.p.n = undefined;\n                    delete data[entry.i];\n                }\n                that._f = that._l = undefined;\n                that[SIZE] = 0;\n            },\n            // 23.1.3.3 Map.prototype.delete(key)\n            // 23.2.3.4 Set.prototype.delete(value)\n            'delete': function (key) {\n                var that = validate(this, NAME);\n                var entry = getEntry(that, key);\n                if (entry) {\n                    var next = entry.n;\n                    var prev = entry.p;\n                    delete that._i[entry.i];\n                    entry.r = true;\n                    if (prev)\n                        prev.n = next;\n                    if (next)\n                        next.p = prev;\n                    if (that._f == entry)\n                        that._f = next;\n                    if (that._l == entry)\n                        that._l = prev;\n                    that[SIZE]--;\n                }\n                return !!entry;\n            },\n            // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n            // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n            forEach: function forEach(callbackfn /* , that = undefined */) {\n                validate(this, NAME);\n                var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n                var entry;\n                while (entry = entry ? entry.n : this._f) {\n                    f(entry.v, entry.k, this);\n                    // revert to the last existing entry\n                    while (entry && entry.r)\n                        entry = entry.p;\n                }\n            },\n            // 23.1.3.7 Map.prototype.has(key)\n            // 23.2.3.7 Set.prototype.has(value)\n            has: function has(key) {\n                return !!getEntry(validate(this, NAME), key);\n            }\n        });\n        if (DESCRIPTORS)\n            dP(C.prototype, 'size', {\n                get: function () {\n                    return validate(this, NAME)[SIZE];\n                }\n            });\n        return C;\n    },\n    def: function (that, key, value) {\n        var entry = getEntry(that, key);\n        var prev, index;\n        // change existing entry\n        if (entry) {\n            entry.v = value;\n            // create new entry\n        }\n        else {\n            that._l = entry = {\n                i: index = fastKey(key, true),\n                k: key,\n                v: value,\n                p: prev = that._l,\n                n: undefined,\n                r: false // <- removed\n            };\n            if (!that._f)\n                that._f = entry;\n            if (prev)\n                prev.n = entry;\n            that[SIZE]++;\n            // add to index\n            if (index !== 'F')\n                that._i[index] = entry;\n        }\n        return that;\n    },\n    getEntry: getEntry,\n    setStrong: function (C, NAME, IS_MAP) {\n        // add .keys, .values, .entries, [@@iterator]\n        // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n        $iterDefine(C, NAME, function (iterated, kind) {\n            this._t = validate(iterated, NAME); // target\n            this._k = kind; // kind\n            this._l = undefined; // previous\n        }, function () {\n            var that = this;\n            var kind = that._k;\n            var entry = that._l;\n            // revert to the last existing entry\n            while (entry && entry.r)\n                entry = entry.p;\n            // get next entry\n            if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n                // or finish the iteration\n                that._t = undefined;\n                return step(1);\n            }\n            // return step by kind\n            if (kind == 'keys')\n                return step(0, entry.k);\n            if (kind == 'values')\n                return step(0, entry.v);\n            return step(0, [entry.k, entry.v]);\n        }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n        // add [@@species], 23.1.2.2, 23.2.2.2\n        setSpecies(NAME);\n    }\n};\n\n",{"version":3,"file":"/home/grg/ANGULAR/myDashboard/node_modules/core-js/modules/_collection-strong.js.post-build-optimizer.js","sourceRoot":"","sources":["/home/grg/ANGULAR/myDashboard/node_modules/core-js/modules/_collection-strong.js.pre-build-optimizer.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n"]}]}