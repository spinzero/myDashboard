{"remainingRequest":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/grg/ANGULAR/myDashboard/node_modules/whatwg-fetch/fetch.js","dependencies":[{"path":"/home/grg/ANGULAR/myDashboard/node_modules/whatwg-fetch/fetch.js","mtime":1517943823000},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/cache-loader/dist/cjs.js","mtime":1535911065030},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["(function (self) {\n    'use strict';\n    if (self.fetch) {\n        return;\n    }\n    var support = {\n        searchParams: 'URLSearchParams' in self,\n        iterable: 'Symbol' in self && 'iterator' in Symbol,\n        blob: 'FileReader' in self && 'Blob' in self && (function () {\n            try {\n                new Blob();\n                return true;\n            }\n            catch (e) {\n                return false;\n            }\n        })(),\n        formData: 'FormData' in self,\n        arrayBuffer: 'ArrayBuffer' in self\n    };\n    if (support.arrayBuffer) {\n        var viewClasses = [\n            '[object Int8Array]',\n            '[object Uint8Array]',\n            '[object Uint8ClampedArray]',\n            '[object Int16Array]',\n            '[object Uint16Array]',\n            '[object Int32Array]',\n            '[object Uint32Array]',\n            '[object Float32Array]',\n            '[object Float64Array]'\n        ];\n        var isDataView = function (obj) {\n            return obj && DataView.prototype.isPrototypeOf(obj);\n        };\n        var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n        };\n    }\n    function normalizeName(name) {\n        if (typeof name !== 'string') {\n            name = String(name);\n        }\n        if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n            throw new TypeError('Invalid character in header field name');\n        }\n        return name.toLowerCase();\n    }\n    function normalizeValue(value) {\n        if (typeof value !== 'string') {\n            value = String(value);\n        }\n        return value;\n    }\n    // Build a destructive iterator for the value list\n    function iteratorFor(items) {\n        var iterator = {\n            next: function () {\n                var value = items.shift();\n                return { done: value === undefined, value: value };\n            }\n        };\n        if (support.iterable) {\n            iterator[Symbol.iterator] = function () {\n                return iterator;\n            };\n        }\n        return iterator;\n    }\n    function Headers(headers) {\n        this.map = {};\n        if (headers instanceof Headers) {\n            headers.forEach(function (value, name) {\n                this.append(name, value);\n            }, this);\n        }\n        else if (Array.isArray(headers)) {\n            headers.forEach(function (header) {\n                this.append(header[0], header[1]);\n            }, this);\n        }\n        else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function (name) {\n                this.append(name, headers[name]);\n            }, this);\n        }\n    }\n    Headers.prototype.append = function (name, value) {\n        name = normalizeName(name);\n        value = normalizeValue(value);\n        var oldValue = this.map[name];\n        this.map[name] = oldValue ? oldValue + ',' + value : value;\n    };\n    Headers.prototype['delete'] = function (name) {\n        delete this.map[normalizeName(name)];\n    };\n    Headers.prototype.get = function (name) {\n        name = normalizeName(name);\n        return this.has(name) ? this.map[name] : null;\n    };\n    Headers.prototype.has = function (name) {\n        return this.map.hasOwnProperty(normalizeName(name));\n    };\n    Headers.prototype.set = function (name, value) {\n        this.map[normalizeName(name)] = normalizeValue(value);\n    };\n    Headers.prototype.forEach = function (callback, thisArg) {\n        for (var name in this.map) {\n            if (this.map.hasOwnProperty(name)) {\n                callback.call(thisArg, this.map[name], name, this);\n            }\n        }\n    };\n    Headers.prototype.keys = function () {\n        var items = [];\n        this.forEach(function (value, name) { items.push(name); });\n        return iteratorFor(items);\n    };\n    Headers.prototype.values = function () {\n        var items = [];\n        this.forEach(function (value) { items.push(value); });\n        return iteratorFor(items);\n    };\n    Headers.prototype.entries = function () {\n        var items = [];\n        this.forEach(function (value, name) { items.push([name, value]); });\n        return iteratorFor(items);\n    };\n    if (support.iterable) {\n        Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n    }\n    function consumed(body) {\n        if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'));\n        }\n        body.bodyUsed = true;\n    }\n    function fileReaderReady(reader) {\n        return new Promise(function (resolve, reject) {\n            reader.onload = function () {\n                resolve(reader.result);\n            };\n            reader.onerror = function () {\n                reject(reader.error);\n            };\n        });\n    }\n    function readBlobAsArrayBuffer(blob) {\n        var reader = new FileReader();\n        var promise = fileReaderReady(reader);\n        reader.readAsArrayBuffer(blob);\n        return promise;\n    }\n    function readBlobAsText(blob) {\n        var reader = new FileReader();\n        var promise = fileReaderReady(reader);\n        reader.readAsText(blob);\n        return promise;\n    }\n    function readArrayBufferAsText(buf) {\n        var view = new Uint8Array(buf);\n        var chars = new Array(view.length);\n        for (var i = 0; i < view.length; i++) {\n            chars[i] = String.fromCharCode(view[i]);\n        }\n        return chars.join('');\n    }\n    function bufferClone(buf) {\n        if (buf.slice) {\n            return buf.slice(0);\n        }\n        else {\n            var view = new Uint8Array(buf.byteLength);\n            view.set(new Uint8Array(buf));\n            return view.buffer;\n        }\n    }\n    function Body() {\n        this.bodyUsed = false;\n        this._initBody = function (body) {\n            this._bodyInit = body;\n            if (!body) {\n                this._bodyText = '';\n            }\n            else if (typeof body === 'string') {\n                this._bodyText = body;\n            }\n            else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n                this._bodyBlob = body;\n            }\n            else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n                this._bodyFormData = body;\n            }\n            else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                this._bodyText = body.toString();\n            }\n            else if (support.arrayBuffer && support.blob && isDataView(body)) {\n                this._bodyArrayBuffer = bufferClone(body.buffer);\n                // IE 10-11 can't handle a DataView body.\n                this._bodyInit = new Blob([this._bodyArrayBuffer]);\n            }\n            else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n                this._bodyArrayBuffer = bufferClone(body);\n            }\n            else {\n                throw new Error('unsupported BodyInit type');\n            }\n            if (!this.headers.get('content-type')) {\n                if (typeof body === 'string') {\n                    this.headers.set('content-type', 'text/plain;charset=UTF-8');\n                }\n                else if (this._bodyBlob && this._bodyBlob.type) {\n                    this.headers.set('content-type', this._bodyBlob.type);\n                }\n                else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                    this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                }\n            }\n        };\n        if (support.blob) {\n            this.blob = function () {\n                var rejected = consumed(this);\n                if (rejected) {\n                    return rejected;\n                }\n                if (this._bodyBlob) {\n                    return Promise.resolve(this._bodyBlob);\n                }\n                else if (this._bodyArrayBuffer) {\n                    return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n                }\n                else if (this._bodyFormData) {\n                    throw new Error('could not read FormData body as blob');\n                }\n                else {\n                    return Promise.resolve(new Blob([this._bodyText]));\n                }\n            };\n            this.arrayBuffer = function () {\n                if (this._bodyArrayBuffer) {\n                    return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n                }\n                else {\n                    return this.blob().then(readBlobAsArrayBuffer);\n                }\n            };\n        }\n        this.text = function () {\n            var rejected = consumed(this);\n            if (rejected) {\n                return rejected;\n            }\n            if (this._bodyBlob) {\n                return readBlobAsText(this._bodyBlob);\n            }\n            else if (this._bodyArrayBuffer) {\n                return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n            }\n            else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as text');\n            }\n            else {\n                return Promise.resolve(this._bodyText);\n            }\n        };\n        if (support.formData) {\n            this.formData = function () {\n                return this.text().then(decode);\n            };\n        }\n        this.json = function () {\n            return this.text().then(JSON.parse);\n        };\n        return this;\n    }\n    // HTTP methods whose capitalization should be normalized\n    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n    function normalizeMethod(method) {\n        var upcased = method.toUpperCase();\n        return (methods.indexOf(upcased) > -1) ? upcased : method;\n    }\n    function Request(input, options) {\n        options = options || {};\n        var body = options.body;\n        if (input instanceof Request) {\n            if (input.bodyUsed) {\n                throw new TypeError('Already read');\n            }\n            this.url = input.url;\n            this.credentials = input.credentials;\n            if (!options.headers) {\n                this.headers = new Headers(input.headers);\n            }\n            this.method = input.method;\n            this.mode = input.mode;\n            if (!body && input._bodyInit != null) {\n                body = input._bodyInit;\n                input.bodyUsed = true;\n            }\n        }\n        else {\n            this.url = String(input);\n        }\n        this.credentials = options.credentials || this.credentials || 'omit';\n        if (options.headers || !this.headers) {\n            this.headers = new Headers(options.headers);\n        }\n        this.method = normalizeMethod(options.method || this.method || 'GET');\n        this.mode = options.mode || this.mode || null;\n        this.referrer = null;\n        if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests');\n        }\n        this._initBody(body);\n    }\n    Request.prototype.clone = function () {\n        return new Request(this, { body: this._bodyInit });\n    };\n    function decode(body) {\n        var form = new FormData();\n        body.trim().split('&').forEach(function (bytes) {\n            if (bytes) {\n                var split = bytes.split('=');\n                var name = split.shift().replace(/\\+/g, ' ');\n                var value = split.join('=').replace(/\\+/g, ' ');\n                form.append(decodeURIComponent(name), decodeURIComponent(value));\n            }\n        });\n        return form;\n    }\n    function parseHeaders(rawHeaders) {\n        var headers = new Headers();\n        // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n        // https://tools.ietf.org/html/rfc7230#section-3.2\n        var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n        preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n            var parts = line.split(':');\n            var key = parts.shift().trim();\n            if (key) {\n                var value = parts.join(':').trim();\n                headers.append(key, value);\n            }\n        });\n        return headers;\n    }\n    Body.call(Request.prototype);\n    function Response(bodyInit, options) {\n        if (!options) {\n            options = {};\n        }\n        this.type = 'default';\n        this.status = options.status === undefined ? 200 : options.status;\n        this.ok = this.status >= 200 && this.status < 300;\n        this.statusText = 'statusText' in options ? options.statusText : 'OK';\n        this.headers = new Headers(options.headers);\n        this.url = options.url || '';\n        this._initBody(bodyInit);\n    }\n    Body.call(Response.prototype);\n    Response.prototype.clone = function () {\n        return new Response(this._bodyInit, {\n            status: this.status,\n            statusText: this.statusText,\n            headers: new Headers(this.headers),\n            url: this.url\n        });\n    };\n    Response.error = function () {\n        var response = new Response(null, { status: 0, statusText: '' });\n        response.type = 'error';\n        return response;\n    };\n    var redirectStatuses = [301, 302, 303, 307, 308];\n    Response.redirect = function (url, status) {\n        if (redirectStatuses.indexOf(status) === -1) {\n            throw new RangeError('Invalid status code');\n        }\n        return new Response(null, { status: status, headers: { location: url } });\n    };\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n    self.fetch = function (input, init) {\n        return new Promise(function (resolve, reject) {\n            var request = new Request(input, init);\n            var xhr = new XMLHttpRequest();\n            xhr.onload = function () {\n                var options = {\n                    status: xhr.status,\n                    statusText: xhr.statusText,\n                    headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n                };\n                options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n                var body = 'response' in xhr ? xhr.response : xhr.responseText;\n                resolve(new Response(body, options));\n            };\n            xhr.onerror = function () {\n                reject(new TypeError('Network request failed'));\n            };\n            xhr.ontimeout = function () {\n                reject(new TypeError('Network request failed'));\n            };\n            xhr.open(request.method, request.url, true);\n            if (request.credentials === 'include') {\n                xhr.withCredentials = true;\n            }\n            else if (request.credentials === 'omit') {\n                xhr.withCredentials = false;\n            }\n            if ('responseType' in xhr && support.blob) {\n                xhr.responseType = 'blob';\n            }\n            request.headers.forEach(function (value, name) {\n                xhr.setRequestHeader(name, value);\n            });\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n        });\n    };\n    self.fetch.polyfill = true;\n})(typeof self !== 'undefined' ? self : this);\n\n",{"version":3,"file":"/home/grg/ANGULAR/myDashboard/node_modules/whatwg-fetch/fetch.js.post-build-optimizer.js","sourceRoot":"","sources":["/home/grg/ANGULAR/myDashboard/node_modules/whatwg-fetch/fetch.js.pre-build-optimizer.js"],"names":[],"mappings":"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","sourcesContent":["(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n"]}]}