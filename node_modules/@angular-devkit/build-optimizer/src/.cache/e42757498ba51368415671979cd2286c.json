{"remainingRequest":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/grg/ANGULAR/myDashboard/node_modules/angular-in-memory-web-api/interfaces.js","dependencies":[{"path":"/home/grg/ANGULAR/myDashboard/node_modules/angular-in-memory-web-api/interfaces.js","mtime":1532392197000},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/cache-loader/dist/cjs.js","mtime":1535911065030},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { Injectable } from '@angular/core';\n/**\n* Interface for a class that creates an in-memory database\n*\n* Its `createDb` method creates a hash of named collections that represents the database\n*\n* For maximum flexibility, the service may define HTTP method overrides.\n* Such methods must match the spelling of an HTTP method in lower case (e.g, \"get\").\n* If a request has a matching method, it will be called as in\n* `get(info: requestInfo, db: {})` where `db` is the database object described above.\n*/\nvar /**\n* Interface for a class that creates an in-memory database\n*\n* Its `createDb` method creates a hash of named collections that represents the database\n*\n* For maximum flexibility, the service may define HTTP method overrides.\n* Such methods must match the spelling of an HTTP method in lower case (e.g, \"get\").\n* If a request has a matching method, it will be called as in\n* `get(info: requestInfo, db: {})` where `db` is the database object described above.\n*/ InMemoryDbService = /** @class */ /*@__PURE__*/ (function () {\n    function InMemoryDbService() {\n    }\n    return InMemoryDbService;\n}());\n/**\n* Interface for a class that creates an in-memory database\n*\n* Its `createDb` method creates a hash of named collections that represents the database\n*\n* For maximum flexibility, the service may define HTTP method overrides.\n* Such methods must match the spelling of an HTTP method in lower case (e.g, \"get\").\n* If a request has a matching method, it will be called as in\n* `get(info: requestInfo, db: {})` where `db` is the database object described above.\n*/\nexport { InMemoryDbService };\n/**\n* Interface for InMemoryBackend configuration options\n*/\nvar /**\n* Interface for InMemoryBackend configuration options\n*/ InMemoryBackendConfigArgs = /** @class */ /*@__PURE__*/ (function () {\n    function InMemoryBackendConfigArgs() {\n    }\n    return InMemoryBackendConfigArgs;\n}());\n/**\n* Interface for InMemoryBackend configuration options\n*/\nexport { InMemoryBackendConfigArgs };\n/**\n*  InMemoryBackendService configuration options\n*  Usage:\n*    InMemoryWebApiModule.forRoot(InMemHeroService, {delay: 600})\n*\n*  or if providing separately:\n*    provide(InMemoryBackendConfig, {useValue: {delay: 600}}),\n*/\nvar InMemoryBackendConfig = /** @class */ /*@__PURE__*/ (function () {\n    function InMemoryBackendConfig(config) {\n        if (config === void 0) {\n            config = {};\n        }\n        Object.assign(this, {\n            // default config:\n            caseSensitiveSearch: false,\n            dataEncapsulation: false,\n            // do NOT wrap content within an object with a `data` property\n            delay: 500,\n            // simulate latency by delaying response\n            delete404: false,\n            // don't complain if can't find entity to delete\n            passThruUnknownUrl: false,\n            // 404 if can't process URL\n            post204: true,\n            // don't return the item after a POST\n            post409: false,\n            // don't update existing item with that ID\n            put204: true,\n            // don't return the item after a PUT\n            put404: false,\n            // create new item if PUT item with that ID not found\n            apiBase: undefined,\n            // assumed to be the first path segment\n            host: undefined,\n            // default value is actually set in InMemoryBackendService ctor\n            rootPath: undefined // default value is actually set in InMemoryBackendService ctor\n        }, config);\n    }\n    return InMemoryBackendConfig;\n}());\nexport { InMemoryBackendConfig };\n/** Return information (UriInfo) about a URI  */\nexport function parseUri(str) {\n    // Adapted from parseuri package - http://blog.stevenlevithan.com/archives/parseuri\n    // tslint:disable-next-line:max-line-length\n    var URL_REGEX = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n    var m = URL_REGEX.exec(str);\n    var uri = {\n        source: '',\n        protocol: '',\n        authority: '',\n        userInfo: '',\n        user: '',\n        password: '',\n        host: '',\n        port: '',\n        relative: '',\n        path: '',\n        directory: '',\n        file: '',\n        query: '',\n        anchor: ''\n    };\n    var keys = Object.keys(uri);\n    var i = keys.length;\n    while (i--) {\n        uri[keys[i]] = m[i] || '';\n    }\n    return uri;\n}\nexport function removeTrailingSlash(path) {\n    return path.replace(/\\/$/, '');\n}\n\n\n\n",{"version":3,"file":"/home/grg/ANGULAR/myDashboard/node_modules/angular-in-memory-web-api/interfaces.js.post-build-optimizer.js","sourceRoot":"","sources":["/home/grg/ANGULAR/myDashboard/node_modules/angular-in-memory-web-api/interfaces.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C;;;;;;;;;EASE;AACF,IAAI;;;;;;;;;EASF,CACF,iBAAiB,GAAG,aAAa,eAAC,CAAC;IAC/B;IACA,CAAC;IACD,OAAO,iBAAiB,CAAC;GAC1B,CAAC,CAAC;AACL;;;;;;;;;EASE;AACF,OAAO,EAAE,iBAAiB,EAAE,CAAC;AAC7B;;EAEE;AACF,IAAI;;EAEF,CACF,yBAAyB,GAAG,aAAa,eAAC,CAAC;IACvC;IACA,CAAC;IACD,OAAO,yBAAyB,CAAC;GAClC,CAAC,CAAC;AACL;;EAEE;AACF,OAAO,EAAE,yBAAyB,EAAE,CAAC;AACrC;;;;;;;EAOE;AACF,IAAI,qBAAqB,GAAG,aAAa,eAAC,CAAC;IACvC,+BAA+B,MAAM;QACjC,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;YAAE,MAAM,GAAG,EAAE,CAAC;SAAE;QACvC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;YAChB,kBAAkB;YAClB,mBAAmB,EAAE,KAAK;YAC1B,iBAAiB,EAAE,KAAK;YACxB,8DAA8D;YAC9D,KAAK,EAAE,GAAG;YACV,wCAAwC;YACxC,SAAS,EAAE,KAAK;YAChB,gDAAgD;YAChD,kBAAkB,EAAE,KAAK;YACzB,2BAA2B;YAC3B,OAAO,EAAE,IAAI;YACb,qCAAqC;YACrC,OAAO,EAAE,KAAK;YACd,0CAA0C;YAC1C,MAAM,EAAE,IAAI;YACZ,oCAAoC;YACpC,MAAM,EAAE,KAAK;YACb,qDAAqD;YACrD,OAAO,EAAE,SAAS;YAClB,uCAAuC;YACvC,IAAI,EAAE,SAAS;YACf,+DAA+D;YAC/D,QAAQ,EAAE,SAAS,CAAC,+DAA+D;SACtF,EAAE,MAAM,CAAC,CAAC;IACf,CAAC;IAQD,OAAO,qBAAqB,CAAC;GAC9B,CAAC,CAAC;AACL,OAAO,EAAE,qBAAqB,EAAE,CAAC;AACjC,gDAAgD;AAChD,MAAM,mBAAmB,GAAG;IACxB,mFAAmF;IACnF,2CAA2C;IAC3C,IAAI,SAAS,GAAG,kMAAkM,CAAC;IACnN,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,IAAI,GAAG,GAAG;QACN,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,EAAE;QACZ,SAAS,EAAE,EAAE;QACb,QAAQ,EAAE,EAAE;QACZ,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE,EAAE;QACZ,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE,EAAE;QACZ,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,EAAE;QACb,IAAI,EAAE,EAAE;QACR,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;KACb,CAAC;IACF,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;IACpB,OAAO,CAAC,EAAE,EAAE;QACR,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;KAC7B;IACD,OAAO,GAAG,CAAC;AACf,CAAC;AACD,MAAM,8BAA8B,IAAI;IACpC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACnC,CAAC;AACD,sCAAsC","sourcesContent":["import { Injectable } from '@angular/core';\n/**\n* Interface for a class that creates an in-memory database\n*\n* Its `createDb` method creates a hash of named collections that represents the database\n*\n* For maximum flexibility, the service may define HTTP method overrides.\n* Such methods must match the spelling of an HTTP method in lower case (e.g, \"get\").\n* If a request has a matching method, it will be called as in\n* `get(info: requestInfo, db: {})` where `db` is the database object described above.\n*/\nvar /**\n* Interface for a class that creates an in-memory database\n*\n* Its `createDb` method creates a hash of named collections that represents the database\n*\n* For maximum flexibility, the service may define HTTP method overrides.\n* Such methods must match the spelling of an HTTP method in lower case (e.g, \"get\").\n* If a request has a matching method, it will be called as in\n* `get(info: requestInfo, db: {})` where `db` is the database object described above.\n*/\nInMemoryDbService = /** @class */ (function () {\n    function InMemoryDbService() {\n    }\n    return InMemoryDbService;\n}());\n/**\n* Interface for a class that creates an in-memory database\n*\n* Its `createDb` method creates a hash of named collections that represents the database\n*\n* For maximum flexibility, the service may define HTTP method overrides.\n* Such methods must match the spelling of an HTTP method in lower case (e.g, \"get\").\n* If a request has a matching method, it will be called as in\n* `get(info: requestInfo, db: {})` where `db` is the database object described above.\n*/\nexport { InMemoryDbService };\n/**\n* Interface for InMemoryBackend configuration options\n*/\nvar /**\n* Interface for InMemoryBackend configuration options\n*/\nInMemoryBackendConfigArgs = /** @class */ (function () {\n    function InMemoryBackendConfigArgs() {\n    }\n    return InMemoryBackendConfigArgs;\n}());\n/**\n* Interface for InMemoryBackend configuration options\n*/\nexport { InMemoryBackendConfigArgs };\n/**\n*  InMemoryBackendService configuration options\n*  Usage:\n*    InMemoryWebApiModule.forRoot(InMemHeroService, {delay: 600})\n*\n*  or if providing separately:\n*    provide(InMemoryBackendConfig, {useValue: {delay: 600}}),\n*/\nvar InMemoryBackendConfig = /** @class */ (function () {\n    function InMemoryBackendConfig(config) {\n        if (config === void 0) { config = {}; }\n        Object.assign(this, {\n            // default config:\n            caseSensitiveSearch: false,\n            dataEncapsulation: false,\n            // do NOT wrap content within an object with a `data` property\n            delay: 500,\n            // simulate latency by delaying response\n            delete404: false,\n            // don't complain if can't find entity to delete\n            passThruUnknownUrl: false,\n            // 404 if can't process URL\n            post204: true,\n            // don't return the item after a POST\n            post409: false,\n            // don't update existing item with that ID\n            put204: true,\n            // don't return the item after a PUT\n            put404: false,\n            // create new item if PUT item with that ID not found\n            apiBase: undefined,\n            // assumed to be the first path segment\n            host: undefined,\n            // default value is actually set in InMemoryBackendService ctor\n            rootPath: undefined // default value is actually set in InMemoryBackendService ctor\n        }, config);\n    }\n    InMemoryBackendConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    InMemoryBackendConfig.ctorParameters = function () { return [\n        { type: InMemoryBackendConfigArgs, },\n    ]; };\n    return InMemoryBackendConfig;\n}());\nexport { InMemoryBackendConfig };\n/** Return information (UriInfo) about a URI  */\nexport function parseUri(str) {\n    // Adapted from parseuri package - http://blog.stevenlevithan.com/archives/parseuri\n    // tslint:disable-next-line:max-line-length\n    var URL_REGEX = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n    var m = URL_REGEX.exec(str);\n    var uri = {\n        source: '',\n        protocol: '',\n        authority: '',\n        userInfo: '',\n        user: '',\n        password: '',\n        host: '',\n        port: '',\n        relative: '',\n        path: '',\n        directory: '',\n        file: '',\n        query: '',\n        anchor: ''\n    };\n    var keys = Object.keys(uri);\n    var i = keys.length;\n    while (i--) {\n        uri[keys[i]] = m[i] || '';\n    }\n    return uri;\n}\nexport function removeTrailingSlash(path) {\n    return path.replace(/\\/$/, '');\n}\n//# sourceMappingURL=interfaces.js.map"]}]}