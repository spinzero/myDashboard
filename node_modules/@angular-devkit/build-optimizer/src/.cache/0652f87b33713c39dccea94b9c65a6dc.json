{"remainingRequest":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/list/changes.js","dependencies":[{"path":"/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/list/changes.js","mtime":499162500000},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/cache-loader/dist/cjs.js","mtime":1535911065030},{"path":"/home/grg/ANGULAR/myDashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { fromRef } from '../observable/fromRef';\nimport { of, merge } from 'rxjs';\nimport { isNil } from '../utils';\nimport { switchMap, distinctUntilChanged, scan } from 'rxjs/operators';\nexport function listChanges(ref, events) {\n    return fromRef(ref, 'value', 'once').pipe(switchMap(function (snapshotAction) {\n        var childEvent$ = [of(snapshotAction)];\n        events.forEach(function (event) { return childEvent$.push(fromRef(ref, event)); });\n        return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\nfunction positionFor(changes, key) {\n    var len = changes.length;\n    for (var i = 0; i < len; i++) {\n        if (changes[i].payload.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (isNil(prevKey)) {\n        return 0;\n    }\n    else {\n        var i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, action) {\n    var payload = action.payload, type = action.type, prevKey = action.prevKey, key = action.key;\n    var currentKeyPosition = positionFor(current, key);\n    var afterPreviousKeyPosition = positionAfter(current, prevKey);\n    switch (action.type) {\n        case 'value':\n            if (action.payload && action.payload.exists()) {\n                var prevKey_1 = null;\n                action.payload.forEach(function (payload) {\n                    var action = { payload: payload, type: 'value', prevKey: prevKey_1, key: payload.key };\n                    prevKey_1 = payload.key;\n                    current = current.concat([action]);\n                    return false;\n                });\n            }\n            return current;\n        case 'child_added':\n            if (currentKeyPosition > -1) {\n                var previous = current[currentKeyPosition - 1];\n                if ((previous && previous.key || null) != prevKey) {\n                    current = current.filter(function (x) { return x.payload.key !== payload.key; });\n                    current.splice(afterPreviousKeyPosition, 0, action);\n                }\n            }\n            else if (prevKey == null) {\n                return [action].concat(current);\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, action);\n            }\n            return current;\n        case 'child_removed':\n            return current.filter(function (x) { return x.payload.key !== payload.key; });\n        case 'child_changed':\n            return current.map(function (x) { return x.payload.key === key ? action : x; });\n        case 'child_moved':\n            if (currentKeyPosition > -1) {\n                var data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        default:\n            return current;\n    }\n}\n\n\n\n",{"version":3,"file":"/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/list/changes.js.post-build-optimizer.js","sourceRoot":"","sources":["/home/grg/ANGULAR/myDashboard/node_modules/angularfire2/database/list/changes.js.pre-build-optimizer.js"],"names":[],"mappings":"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","sourcesContent":["import { fromRef } from '../observable/fromRef';\nimport { of, merge } from 'rxjs';\nimport { isNil } from '../utils';\nimport { switchMap, distinctUntilChanged, scan } from 'rxjs/operators';\nexport function listChanges(ref, events) {\n    return fromRef(ref, 'value', 'once').pipe(switchMap(function (snapshotAction) {\n        var childEvent$ = [of(snapshotAction)];\n        events.forEach(function (event) { return childEvent$.push(fromRef(ref, event)); });\n        return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\nfunction positionFor(changes, key) {\n    var len = changes.length;\n    for (var i = 0; i < len; i++) {\n        if (changes[i].payload.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (isNil(prevKey)) {\n        return 0;\n    }\n    else {\n        var i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, action) {\n    var payload = action.payload, type = action.type, prevKey = action.prevKey, key = action.key;\n    var currentKeyPosition = positionFor(current, key);\n    var afterPreviousKeyPosition = positionAfter(current, prevKey);\n    switch (action.type) {\n        case 'value':\n            if (action.payload && action.payload.exists()) {\n                var prevKey_1 = null;\n                action.payload.forEach(function (payload) {\n                    var action = { payload: payload, type: 'value', prevKey: prevKey_1, key: payload.key };\n                    prevKey_1 = payload.key;\n                    current = current.concat([action]);\n                    return false;\n                });\n            }\n            return current;\n        case 'child_added':\n            if (currentKeyPosition > -1) {\n                var previous = current[currentKeyPosition - 1];\n                if ((previous && previous.key || null) != prevKey) {\n                    current = current.filter(function (x) { return x.payload.key !== payload.key; });\n                    current.splice(afterPreviousKeyPosition, 0, action);\n                }\n            }\n            else if (prevKey == null) {\n                return [action].concat(current);\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, action);\n            }\n            return current;\n        case 'child_removed':\n            return current.filter(function (x) { return x.payload.key !== payload.key; });\n        case 'child_changed':\n            return current.map(function (x) { return x.payload.key === key ? action : x; });\n        case 'child_moved':\n            if (currentKeyPosition > -1) {\n                var data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        default:\n            return current;\n    }\n}\n//# sourceMappingURL=changes.js.map"]}]}